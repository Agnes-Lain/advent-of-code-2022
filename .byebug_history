quit
arr
q
quit
move
m
n
arr
quit
arr
q
s.split(" ")
s = "move 1 from 8 to 1"
s.gsub(/\d/).to_a
s.gsub(/\d/)
s = 'move 19 from 2 to 1'
a1
quit
a2.first(20)
quit
a1
a1[0].pop(3).reverse
a1[0].pop(3)
a2.count
a2[0][0]
a[0][0]
a2[0]
a2
a1[0]
a1
quit
["a"]+["b","c"].reverse
["a"]+["b","c"]
["a"]+["b"]
m
n
a2
a1
q
a1
n
m
n
a1
n
m
n
q
n
a1
n
a2
n
a1.size
a1
quit
a1[move[2]-1] + m.reverse
m.reverse
a1[move[2]-1] 
m
n
m
quit
["D"].reverse
m
a1
n
m
n
quit
a + d
a
d = ["a", "b", "c"].pop(2)
d = ["a", "b", "c"]
d = ["a", "b", "c"].pop(1)
d
d = ["a", "b", "c"].pop
["a", "b", "c"].reverse
a.reverse
a = a1[0]
a1
m.flatten
m.to_s
m
n
quit
m
a1.flatten
a1
n
quit
a1
n
m
n
quit
m
n
move
quit
sub_b - sub_a
sub_a - sub_b
sub_b
sub_a
n
sub_a - sub_b
sub_b
sub_a
n
sub_b - sub_a
sub_a - sub_b
sub_b
sub_a
n
quit
sub_b
sub_a
n
quit
sub_b-sub_a
sub_a-sub_b
sub_a.include?(sub_b)
sub_b
n
sub_a
n
count
n
count
n
sub_b
sub_a
n
sub_b
n
sub_a
n
quit
input
quit
input
quit
n
sub_a
n
sub_a
n
sub_a
n
sub_a
l
n
a
quit
adv_move
score
n
score
n
score
n
score
quit
score
socre
next
score
next
score
next
score
next
score
socre
next
score
socre
next
score
